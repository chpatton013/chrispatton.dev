# Defines user and group credentials used by worker processes.
user {{nginx_user}} {{nginx_group}};

# Defines the number of worker processes.
worker_processes {{nginx_worker_processes}};

# Load all enabled dynamic modules.
include /etc/nginx/modules-enabled/*.conf;

events {
  # Sets the maximum number of simultaneous connections that can be opened by a
  # worker process.
  worker_connections {{nginx_worker_connections}};

  # If multi_accept is disabled, a worker process will accept one new connection
  # at a time. Otherwise, a worker process will accept all new connections at a
  # time.
  multi_accept on;
}

http {
  ##
  # Basic Settings
  ##

  # Enable logging.
  access_log {{nginx_access_log_file}};
  error_log {{nginx_error_log_file}};

  # Enable or disable use of sendfile(2).
  sendfile on;

  # Enable or disable use of asynchronous file I/O.
  aio on;

  # Enable or disable:
  # * sending the response header and the beginning of a file in one packet
  # * sending a file in full packets
  tcp_nopush on;

  # Enable or disable the TCP_NODELAY option.
  # When enabled, accumulate pending packets until an acknowledgement is
  # received for previous packet transmission.
  tcp_nodelay on;

  # Set a maximum timeout for keep-alive client connections on the server.
  keepalive_timeout {{nginx_keepalive_timeout}};

  # Set a maximum size (bytes) for the 'types' hash table.
  types_hash_max_size {{nginx_types_hash_max_size}};

  # Set a maximum size (bytes) for the 'server names' hash table.
  server_names_hash_max_size {{nginx_server_names_hash_max_size}};

  # Enable or disable emitting nginx version on error pages and in the “Server”
  # response header field.
  server_tokens off;

  # Load MIME type mapping.
  include /etc/nginx/mime.types;

  # The default MIME type of a response.
  default_type application/octet-stream;

  ##
  # SSL Settings
  ##

  # Enables the specified protocols.
  ssl_protocols {{nginx_ssl_protocols|join(" ")}};

  # Specifies the enabled ciphers.
  ssl_ciphers {{nginx_ssl_ciphers|join(":")}};

  # Specifies that server ciphers should be preferred over client ciphers when
  # using the SSLv3 and TLS protocols.
  ssl_prefer_server_ciphers on;

  # Sets the types and sizes of caches that store session parameters.
  ssl_session_cache {{nginx_ssl_session_cache}};

  # Specifies a time during which a client may reuse the session parameters.
  ssl_session_timeout {{nginx_ssl_session_timeout}};

  # Enables or disables stapling of OCSP responses by the server.
  ssl_stapling on;

  # Enables or disables verification of OCSP responses by the server.
  ssl_stapling_verify on;

  # Configures name servers used to resolve names of upstream servers into
  # addresses.
  #resolver 10.0.0.1;

  # Specifies a file with DH parameters for DHE ciphers.
  ssl_dhparam {{nginx_ssl_dhparam}};

  # Specifies a file with the certificate in the PEM format for the given
  # virtual server.
  ssl_certificate {{nginx_ssl_certificate}};

  # Specifies a file with the secret key in the PEM format for the given virtual
  # server.
  ssl_certificate_key {{nginx_ssl_certificate_key}};

  # Specifies a file with trusted CA certificates in the PEM format used to
  # verify client certificates and OCSP responses if ssl_stapling is enabled.
  ssl_trusted_certificate {{nginx_ssl_trusted_certificate}};

  # Security headers.
  add_header Strict-Transport-Security "max-age={{nginx_ssl_hsts_max_age}}; includeSubDomains" always;
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-XSS-Protection "1; mode=block";

  ##
  # Gzip Settings
  ##

  # Enables or disables gzipping of responses.
  gzip on;

  # Enables or disables inserting the “Vary: Accept-Encoding” response header
  # field.
  gzip_vary on;

  # Enables or disables gzipping of responses for proxied requests depending on
  # the request and response.
  gzip_proxied any;

  # Sets a gzip compression level of a response. Acceptable values are in the
  # range from 1 to 9.
  gzip_comp_level {{nginx_gzip_compression_level}};

  # Sets the minimum length of a response that will be gzipped.
  gzip_min_length {{nginx_gzip_minimum_length}};

  # Enables gzipping of responses for the specified MIME types. "text/html" is
  # always compressed.
  gzip_types {{nginx_gzip_mime_types|join(" ")}};

  ##
  # SSL Termination
  ##

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  ##
  # Virtual Host Configs
  ##

  include {{nginx_sites_enabled_dir}}/*;

  ##
  # Fallback Host Config
  ##

  server {
    listen 443 default_server;
    listen [::]:443 default_server;
    server_name _;
    return 404;
  }
}
